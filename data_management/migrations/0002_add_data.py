# Generated by Django 4.2.2 on 2023-06-24 15:39
# pylint: disable=unused-argument
import os

from django.db import migrations
import pandas as pd


from ..models import Domain, Degree, City, Profession, Quality, Language, CompanyValue


def add_degrees(apps, schema_editor):
    degrees = pd.read_csv(os.path.join("data_management/_data/degrees.csv"))
    Degree.objects.bulk_create(
        [
            Degree(
                level=row["degree"],
                subject=f"{row['formation']} - {row['speciality']}",
            )
            if not pd.isnull(row["speciality"])
            else Degree(
                level=row["degree"],
                subject=row["formation"],
            )
            for _, row in degrees.iterrows()
        ]
    )


def add_domains(apps, schema_editor):
    domains = pd.read_csv(os.path.join("data_management/_data/domains.csv"))
    Domain.objects.bulk_create(
        [
            Domain(
                domain=row["domain"],
            )
            for _, row in domains.iterrows()
        ]
    )


def add_cities(apps, schema_editor):
    cities = pd.read_csv(os.path.join("data_management/_data/cities.csv"))
    City.objects.bulk_create(
        [
            City(
                city=row["city"],
                department=row["department"],
                region=row["region"],
            )
            for _, row in cities.iterrows()
        ]
    )


def add_professions(apps, schema_editor):
    professions = pd.read_csv(os.path.join("data_management/_data/professions.csv"))
    Profession.objects.bulk_create(
        [
            Profession(
                profession=row["profession"],
                domain=Domain.objects.get(domain=row["domain"]),
            )
            for _, row in professions.iterrows()
        ]
    )


def add_qualities(apps, schema_editor):
    qualities = pd.read_csv(os.path.join("data_management/_data/qualities.csv"))
    Quality.objects.bulk_create(
        [
            Quality(
                quality=row["quality"],
            )
            for _, row in qualities.iterrows()
        ]
    )


def add_languages(apps, schema_editor):
    languages = pd.read_csv(os.path.join("data_management/_data/languages.csv"))
    Language.objects.bulk_create(
        [
            Language(
                language=row["language"],
            )
            for _, row in languages.iterrows()
        ]
    )


def add_company_values(apps, schema_editor):
    company_values = pd.read_csv(
        os.path.join("data_management/_data/company_values.csv")
    )
    CompanyValue.objects.bulk_create(
        [
            CompanyValue(
                value=row["company_value"],
            )
            for _, row in company_values.iterrows()
        ]
    )


class Migration(migrations.Migration):
    dependencies = [
        ("data_management", "0001_initial"),
    ]

    operations = [
        migrations.RunPython(add_degrees),
        migrations.RunPython(add_domains),
        migrations.RunPython(add_cities),
        migrations.RunPython(add_professions),
        migrations.RunPython(add_qualities),
        migrations.RunPython(add_languages),
        migrations.RunPython(add_company_values),
    ]
